"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4718],{3905:(e,t,n)=>{n.d(t,{Zo:()=>f,kt:()=>d});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function u(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var l=r.createContext({}),s=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},f=function(e){var t=s(e.components);return r.createElement(l.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,l=e.parentName,f=u(e,["components","mdxType","originalType","parentName"]),c=s(n),m=o,d=c["".concat(l,".").concat(m)]||c[m]||p[m]||i;return n?r.createElement(d,a(a({ref:t},f),{},{components:n})):r.createElement(d,a({ref:t},f))}));function d(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=m;var u={};for(var l in t)hasOwnProperty.call(t,l)&&(u[l]=t[l]);u.originalType=e,u[c]="string"==typeof e?e:o,a[1]=u;for(var s=2;s<i;s++)a[s]=n[s];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},3535:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>u,toc:()=>s});var r=n(7462),o=(n(7294),n(3905));const i={sidebar_position:5},a="Offline Mutation",u={unversionedId:"mutation/offline-mutation",id:"mutation/offline-mutation",title:"Offline Mutation",description:"Offline mutation support means: when offline, we postpone mutations until we are back online.",source:"@site/docs/mutation/offline-mutation.md",sourceDirName:"mutation",slug:"/mutation/offline-mutation",permalink:"/react-utils/docs/mutation/offline-mutation",draft:!1,editUrl:"https://github.com/ESMO-ENTERPRISE/react-utils/tree/main/docs/mutation/offline-mutation.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Optimistic Update",permalink:"/react-utils/docs/mutation/optimistic-update"},next:{title:"Store",permalink:"/react-utils/docs/category/store"}},l={},s=[],f={toc:s},c="wrapper";function p(e){let{components:t,...n}=e;return(0,o.kt)(c,(0,r.Z)({},f,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"offline-mutation"},"Offline Mutation"),(0,o.kt)("p",null,"Offline mutation support means: when offline, we postpone mutations until we are back online.\nI got that definition from an example in ",(0,o.kt)("a",{parentName:"p",href:"https://tanstack.com/query/latest/docs/react/examples/react/offline"},"TanStack Query"),".\nWe can implement this behavior on react-utils too."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const mutationQueue = [];\n\nconst resumeMutation = () => {\n  if (mutationQueue.length) {\n    updateProfileMutation.get().mutate(mutationQueue[0]);\n  } else {\n    window.removeEventListener('online', resumeMutation);\n  }\n};\n\nconst updateProfileMutation = createMutation(\n  ({ offlineQueue, ...variables }) => {\n    if (!navigator.onLine) {\n      if (!offlineQueue) mutationQueue.push({ ...variables, offlineQueue: true });\n      window.addEventListener('online', resumeMutation);\n      return Promise.reject('offline');\n    }\n    return updateProfile(variables);\n  },\n  {\n    onSuccess: (response, variables) => {\n      if (variables.offlineQueue) {\n        mutationQueue.shift();\n        resumeMutation();\n      }\n    },\n    onError: (error, variables) => {\n      if (variables.offlineQueue && error !== 'offline') {\n        mutationQueue.shift();\n        resumeMutation();\n      }\n    },\n  }\n);\n")))}p.isMDXComponent=!0}}]);