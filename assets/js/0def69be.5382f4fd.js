"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[7781],{3905:(e,r,t)=>{t.d(r,{Zo:()=>u,kt:()=>g});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function c(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var s=n.createContext({}),l=function(e){var r=n.useContext(s),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},u=function(e){var r=l(e.components);return n.createElement(s.Provider,{value:r},e.children)},p="mdxType",y={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},m=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),p=l(t),m=o,g=p["".concat(s,".").concat(m)]||p[m]||y[m]||a;return t?n.createElement(g,i(i({ref:r},u),{},{components:t})):n.createElement(g,i({ref:r},u))}));function g(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=m;var c={};for(var s in r)hasOwnProperty.call(r,s)&&(c[s]=r[s]);c.originalType=e,c[p]="string"==typeof e?e:o,i[1]=c;for(var l=2;l<a;l++)i[l]=t[l];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}m.displayName="MDXCreateElement"},2589:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>s,contentTitle:()=>i,default:()=>y,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var n=t(7462),o=(t(7294),t(3905));const a={sidebar_position:17},i="Custom Logger",c={unversionedId:"query/custom-logger",id:"query/custom-logger",title:"Custom Logger",description:"Set Globally",source:"@site/docs/query/custom-logger.md",sourceDirName:"query",slug:"/query/custom-logger",permalink:"/react-utils/docs/query/custom-logger",draft:!1,editUrl:"https://github.com/ESMO-ENTERPRISE/react-utils/tree/main/docs/query/custom-logger.md",tags:[],version:"current",sidebarPosition:17,frontMatter:{sidebar_position:17},sidebar:"tutorialSidebar",previous:{title:"Suspense",permalink:"/react-utils/docs/query/suspense"},next:{title:"Query Cancellation",permalink:"/react-utils/docs/query/query-cancellation"}},s={},l=[{value:"Set Globally",id:"set-globally",level:2}],u={toc:l},p="wrapper";function y(e){let{components:r,...t}=e;return(0,o.kt)(p,(0,n.Z)({},u,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"custom-logger"},"Custom Logger"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as Sentry from '@sentry/react';\nimport { createQuery } from '@esmo/react-utils';\n\nconst usePokemonsQuery = createQuery(getPokemons, {\n  onError: (error, { key }) => {\n    Sentry.captureException(error);\n\n    // Or, if we want to capture final error (after all retries performed)\n    // const { isGoingToRetry, isGoingToRetryNextPage } = usePokemonsQuery.get(key);\n    // if (!isGoingToRetry && !isGoingToRetryNextPage) Sentry.captureException(error);\n  },\n});\n")),(0,o.kt)("h2",{id:"set-globally"},"Set Globally"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import * as Sentry from '@sentry/react';\nimport { createQuery as createQueryOriginal } from '@esmo/react-utils';\n\nexport const createQuery = (queryFn, options = {}) => {\n  return createQueryOriginal(queryFn, {\n    ...options,\n    onError: (error, state) => {\n      Sentry.captureException(error);\n      options.onError?.(error, state);\n    },\n  });\n};\n")))}y.isMDXComponent=!0}}]);