"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[4715],{3905:(e,r,t)=>{t.d(r,{Zo:()=>c,kt:()=>m});var n=t(7294);function o(e,r,t){return r in e?Object.defineProperty(e,r,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[r]=t,e}function a(e,r){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(e);r&&(n=n.filter((function(r){return Object.getOwnPropertyDescriptor(e,r).enumerable}))),t.push.apply(t,n)}return t}function i(e){for(var r=1;r<arguments.length;r++){var t=null!=arguments[r]?arguments[r]:{};r%2?a(Object(t),!0).forEach((function(r){o(e,r,t[r])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(r){Object.defineProperty(e,r,Object.getOwnPropertyDescriptor(t,r))}))}return e}function s(e,r){if(null==e)return{};var t,n,o=function(e,r){if(null==e)return{};var t,n,o={},a=Object.keys(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||(o[t]=e[t]);return o}(e,r);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(n=0;n<a.length;n++)t=a[n],r.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(o[t]=e[t])}return o}var l=n.createContext({}),u=function(e){var r=n.useContext(l),t=r;return e&&(t="function"==typeof e?e(r):i(i({},r),e)),t},c=function(e){var r=u(e.components);return n.createElement(l.Provider,{value:r},e.children)},y="mdxType",p={inlineCode:"code",wrapper:function(e){var r=e.children;return n.createElement(n.Fragment,{},r)}},f=n.forwardRef((function(e,r){var t=e.components,o=e.mdxType,a=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),y=u(t),f=o,m=y["".concat(l,".").concat(f)]||y[f]||p[f]||a;return t?n.createElement(m,i(i({ref:r},c),{},{components:t})):n.createElement(m,i({ref:r},c))}));function m(e,r){var t=arguments,o=r&&r.mdxType;if("string"==typeof e||o){var a=t.length,i=new Array(a);i[0]=f;var s={};for(var l in r)hasOwnProperty.call(r,l)&&(s[l]=r[l]);s.originalType=e,s[y]="string"==typeof e?e:o,i[1]=s;for(var u=2;u<a;u++)i[u]=t[u];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}f.displayName="MDXCreateElement"},7617:(e,r,t)=>{t.r(r),t.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>u});var n=t(7462),o=(t(7294),t(3905));const a={sidebar_position:8},i="Error Retries",s={unversionedId:"query/error-retries",id:"query/error-retries",title:"Error Retries",description:"When a query fails (the async function throws an error), an automatic retry will be triggered.",source:"@site/docs/query/error-retries.md",sourceDirName:"query",slug:"/query/error-retries",permalink:"/react-utils/docs/query/error-retries",draft:!1,editUrl:"https://github.com/ESMO-ENTERPRISE/react-utils/tree/main/docs/query/error-retries.md",tags:[],version:"current",sidebarPosition:8,frontMatter:{sidebar_position:8},sidebar:"tutorialSidebar",previous:{title:"Initial Query Data (SSR/SSG)",permalink:"/react-utils/docs/query/initial-query-data"},next:{title:"Lazy Query",permalink:"/react-utils/docs/query/lazy-query"}},l={},u=[{value:"Set Globally",id:"set-globally",level:2}],c={toc:u},y="wrapper";function p(e){let{components:r,...t}=e;return(0,o.kt)(y,(0,n.Z)({},c,t,{components:r,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"error-retries"},"Error Retries"),(0,o.kt)("p",null,"When a query fails (the async function throws an error), an automatic retry will be triggered.\nBy default, there will be only 1 time retry with the 2 seconds delay after error occured.\nWe can customize this by setting the ",(0,o.kt)("inlineCode",{parentName:"p"},"retry")," & ",(0,o.kt)("inlineCode",{parentName:"p"},"retryDelay")," options on ",(0,o.kt)("inlineCode",{parentName:"p"},"createQuery")," function."),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"const useProfileQuery = createQuery(\n  fetchProfile,\n  {\n    // retry: 0 (or false) \u2013 no retry\n    // retry: 3            \u2013 maximum retry: 3 times\n    retry: (error, prevState) => {\n      const isClientError = /^4..$/.test(error.status);\n      if (isClientError) return 0;\n      if (prevState.isSuccess) return 1; // Only retry 1 times if already success (just a refetch error)\n      return 3;\n    },\n\n    // retryDelay: 5000 \u2013 delay for 5 seconds\n    retryDelay: (error, prevState) => {\n      return (prevState.retryCount + 1) * 1000; // Delay: 1s, 2s, 3s, etc.\n    }\n  }\n)\n")),(0,o.kt)("h2",{id:"set-globally"},"Set Globally"),(0,o.kt)("p",null,"If we want to modify the default ",(0,o.kt)("inlineCode",{parentName:"p"},"retry")," or ",(0,o.kt)("inlineCode",{parentName:"p"},"retryDelay")," option, we can just create our own ",(0,o.kt)("inlineCode",{parentName:"p"},"createQuery")," function like this:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-jsx"},"import { createQuery as createQueryOriginal } from '@esmo/react-utils';\n\nexport const createQuery = (queryFn, options = {}) => {\n  const {\n    retry = 2,\n    retryDelay = 1000,\n  } = options;\n\n  return createQueryOriginal(queryFn, {\n    ...options,\n    retry,\n    retryDelay,\n  });\n};\n")),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre",className:"language-tsx"},"import {\n  CreateQueryOptions,\n  QueryState,\n  StoreKey,\n  createQuery as createQueryOriginal,\n} from '@esmo/react-utils';\n\nexport const createQuery = <\n  TKey extends StoreKey = StoreKey,\n  TResponse = any,\n  TData = TResponse,\n  TError = unknown,\n>(\n  queryFn: (key: TKey, state: QueryState<TKey, TResponse, TData, TError>) => Promise<TResponse>,\n  options: CreateQueryOptions<TKey, TResponse, TData, TError> = {},\n) => {\n  const {\n    retry = 2,\n    retryDelay = 1000,\n  } = options;\n\n  return createQueryOriginal(queryFn, {\n    ...options,\n    retry,\n    retryDelay,\n  });\n};\n")))}p.isMDXComponent=!0}}]);