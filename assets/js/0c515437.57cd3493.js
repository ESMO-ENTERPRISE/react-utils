"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[8615],{3905:(e,t,r)=>{r.d(t,{Zo:()=>m,kt:()=>b});var a=r(7294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function l(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?l(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):l(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function i(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},l=Object.keys(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)r=l[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var u=a.createContext({}),s=function(e){var t=a.useContext(u),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},m=function(e){var t=s(e.components);return a.createElement(u.Provider,{value:t},e.children)},c="mdxType",p={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,l=e.originalType,u=e.parentName,m=i(e,["components","mdxType","originalType","parentName"]),c=s(r),d=n,b=c["".concat(u,".").concat(d)]||c[d]||p[d]||l;return r?a.createElement(b,o(o({ref:t},m),{},{components:r})):a.createElement(b,o({ref:t},m))}));function b(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var l=r.length,o=new Array(l);o[0]=d;var i={};for(var u in t)hasOwnProperty.call(t,u)&&(i[u]=t[u]);i.originalType=e,i[c]="string"==typeof e?e:n,o[1]=i;for(var s=2;s<l;s++)o[s]=r[s];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},4447:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>u,contentTitle:()=>o,default:()=>p,frontMatter:()=>l,metadata:()=>i,toc:()=>s});var a=r(7462),n=(r(7294),r(3905));const l={sidebar_position:3},o="Form Validators",i={unversionedId:"forms/validators",id:"forms/validators",title:"Form Validators",description:"- `min(val number): boolean`Validator that requires the control's value to be greater than or equal to the provided number.",source:"@site/docs/forms/validators.md",sourceDirName:"forms",slug:"/forms/validators",permalink:"/react-utils/docs/forms/validators",draft:!1,editUrl:"https://github.com/ESMO-ENTERPRISE/react-utils/tree/main/docs/forms/validators.md",tags:[],version:"current",sidebarPosition:3,frontMatter:{sidebar_position:3},sidebar:"tutorialSidebar",previous:{title:"Form validation",permalink:"/react-utils/docs/forms/validations"},next:{title:"Standard form component",permalink:"/react-utils/docs/forms/standar-component"}},u={},s=[],m={toc:s},c="wrapper";function p(e){let{components:t,...r}=e;return(0,n.kt)(c,(0,a.Z)({},m,r,{components:t,mdxType:"MDXLayout"}),(0,n.kt)("h1",{id:"form-validators"},"Form Validators"),(0,n.kt)("ul",null,(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"min(val: UseFormValue, minVal: number): boolean"),(0,n.kt)("br",null),"Validator that requires the control's value to be greater than or equal to the provided number.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"max(val: UseFormValue, maxVal: number): boolean"),(0,n.kt)("br",null),"Validator that requires the control's value to be less than or equal to the provided number.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"required(val: UseFormValue): boolean"),(0,n.kt)("br",null),"Validator that requires the control have a non-empty value.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"requiredTrue(val: UseFormValue): boolean"),(0,n.kt)("br",null),"Validator that requires the control's value be true. This validator is commonly used for required checkboxes.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"equal(withName: string): boolean"),(0,n.kt)("br",null),"Validator that requires the control's value to be equal with other control's value. This validator is commonly used to compare passwords.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"email(val: UseFormValue): boolean"),(0,n.kt)("br",null),"Validator that requires the control's value pass an email validation test.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"minLength(val: UseFormValue, minLengh: number): boolean"),(0,n.kt)("br",null),"Validator that requires the length of the control's value to be greater than or equal to the provided minimum length.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"maxLength(val: UseFormValue, maxLength: number): boolean"),(0,n.kt)("br",null),"Validator that requires the length of the control's value to be less than or equal to the provided maximum length.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"pattern(pattern: string | RegExp): boolean"),(0,n.kt)("br",null),"Validator that requires the control's value to match a regex pattern.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"numeric(val: UseFormValue): boolean"),(0,n.kt)("br",null),"Validator that requires the control's value pass numeric validation test.",(0,n.kt)("br",null),(0,n.kt)("br",null)),(0,n.kt)("li",{parentName:"ul"},(0,n.kt)("inlineCode",{parentName:"li"},"decimal(val: UseFormValue): boolean"),(0,n.kt)("br",null),"Validator that requires the control's value pass decimal validation test.")))}p.isMDXComponent=!0}}]);