"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[5072],{3905:(e,t,n)=>{n.d(t,{Zo:()=>c,kt:()=>y});var r=n(7294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},o=Object.keys(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(r=0;r<o.length;r++)n=o[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=r.createContext({}),u=function(e){var t=r.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},c=function(e){var t=u(e.components);return r.createElement(l.Provider,{value:t},e.children)},p="mdxType",d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},m=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,o=e.originalType,l=e.parentName,c=s(e,["components","mdxType","originalType","parentName"]),p=u(n),m=a,y=p["".concat(l,".").concat(m)]||p[m]||d[m]||o;return n?r.createElement(y,i(i({ref:t},c),{},{components:n})):r.createElement(y,i({ref:t},c))}));function y(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var o=n.length,i=new Array(o);i[0]=m;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s[p]="string"==typeof e?e:a,i[1]=s;for(var u=2;u<o;u++)i[u]=n[u];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}m.displayName="MDXCreateElement"},7442:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>u});var r=n(7462),a=(n(7294),n(3905));const o={sidebar_position:1},i="Introduction",s={unversionedId:"state/introduction",id:"state/introduction",title:"Introduction",description:"Client side data fetching and callback-based state management library. Library's syntaxes and functionalities are very similar to and inspired by react-query library. Queries make network requests and cache the results along with the queryKey.",source:"@site/docs/state/introduction.md",sourceDirName:"state",slug:"/state/introduction",permalink:"/react-utils/docs/state/introduction",draft:!1,editUrl:"https://github.com/ESMO-ENTERPRISE/react-utils/tree/main/docs/state/introduction.md",tags:[],version:"current",sidebarPosition:1,frontMatter:{sidebar_position:1},sidebar:"tutorialSidebar",previous:{title:"State",permalink:"/react-utils/docs/category/state"},next:{title:"Query",permalink:"/react-utils/docs/state/query"}},l={},u=[{value:"Features",id:"features",level:2},{value:"Response Vs Data",id:"response-vs-data",level:2},{value:"Getting started",id:"getting-started",level:2}],c={toc:u},p="wrapper";function d(e){let{components:t,...n}=e;return(0,a.kt)(p,(0,r.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"introduction"},"Introduction"),(0,a.kt)("p",null,"Client side data fetching and callback-based state management library. Library's syntaxes and functionalities are very similar to and inspired by ",(0,a.kt)("inlineCode",{parentName:"p"},"react-query")," library. Queries make network requests and cache the results along with the ",(0,a.kt)("inlineCode",{parentName:"p"},"queryKey"),"."),(0,a.kt)("h2",{id:"features"},"Features"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"auto caching"),(0,a.kt)("li",{parentName:"ul"},"data are in sync across multiple Hooks."),(0,a.kt)("li",{parentName:"ul"},"ability to combine the same multiple network requests (determined by ",(0,a.kt)("inlineCode",{parentName:"li"},"queryKey"),") into a single one."),(0,a.kt)("li",{parentName:"ul"},"ability to avoid race conditions."),(0,a.kt)("li",{parentName:"ul"},"reducing the number of render times as much as possible."),(0,a.kt)("li",{parentName:"ul"},"freshness of data are guaranteed (depends on passed ",(0,a.kt)("inlineCode",{parentName:"li"},"options")," object)."),(0,a.kt)("li",{parentName:"ul"},"can also be used to share global state as it has been built using callbacks and guarantee to re-render only affected components.")),(0,a.kt)("h2",{id:"response-vs-data"},"Response Vs Data"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"const { isSuccess, data, response } = useMyQuery();\n")),(0,a.kt)("p",null,"The ",(0,a.kt)("inlineCode",{parentName:"p"},"response")," represents the untouched response returned from the async function.\nOn the other hand, the ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," represents the customized selection of the response obtained using the ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," option.\nIf we didn't define the ",(0,a.kt)("inlineCode",{parentName:"p"},"select")," option, ",(0,a.kt)("inlineCode",{parentName:"p"},"data")," will be equal to ",(0,a.kt)("inlineCode",{parentName:"p"},"response"),"."),(0,a.kt)("h2",{id:"getting-started"},"Getting started"),(0,a.kt)("blockquote",null,(0,a.kt)("p",{parentName:"blockquote"},"Note: before you start using Hooks, you need to wrap your components with",(0,a.kt)("inlineCode",{parentName:"p"},"QueryProvider"),", which is a context provider for all Hooks. You should put ",(0,a.kt)("inlineCode",{parentName:"p"},"QueryProvider")," on top of all your components. For example :")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},"export default function App(props) {\n  return <QueryProvider>{/* your components */}</QueryProvider>;\n}\n")),(0,a.kt)("p",null,"Now you can start using Hooks provided by the library!"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-jsx"},'const fetchPets = (context) => {\n  return fetch("url").then((res) => res.json());\n};\n\nexport const Pets = (props) => {\n  const queryInstance = useQuery(["pets"], fetchPets);\n\n  return <div>{/* some jsx elements */}</div>;\n};\n')))}d.isMDXComponent=!0}}]);