"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[9116],{3905:(r,e,t)=>{t.d(e,{Zo:()=>u,kt:()=>f});var n=t(7294);function a(r,e,t){return e in r?Object.defineProperty(r,e,{value:t,enumerable:!0,configurable:!0,writable:!0}):r[e]=t,r}function o(r,e){var t=Object.keys(r);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(r);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(r,e).enumerable}))),t.push.apply(t,n)}return t}function i(r){for(var e=1;e<arguments.length;e++){var t=null!=arguments[e]?arguments[e]:{};e%2?o(Object(t),!0).forEach((function(e){a(r,e,t[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(r,Object.getOwnPropertyDescriptors(t)):o(Object(t)).forEach((function(e){Object.defineProperty(r,e,Object.getOwnPropertyDescriptor(t,e))}))}return r}function s(r,e){if(null==r)return{};var t,n,a=function(r,e){if(null==r)return{};var t,n,a={},o=Object.keys(r);for(n=0;n<o.length;n++)t=o[n],e.indexOf(t)>=0||(a[t]=r[t]);return a}(r,e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(r);for(n=0;n<o.length;n++)t=o[n],e.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(r,t)&&(a[t]=r[t])}return a}var l=n.createContext({}),m=function(r){var e=n.useContext(l),t=e;return r&&(t="function"==typeof r?r(e):i(i({},e),r)),t},u=function(r){var e=m(r.components);return n.createElement(l.Provider,{value:e},r.children)},c="mdxType",d={inlineCode:"code",wrapper:function(r){var e=r.children;return n.createElement(n.Fragment,{},e)}},p=n.forwardRef((function(r,e){var t=r.components,a=r.mdxType,o=r.originalType,l=r.parentName,u=s(r,["components","mdxType","originalType","parentName"]),c=m(t),p=a,f=c["".concat(l,".").concat(p)]||c[p]||d[p]||o;return t?n.createElement(f,i(i({ref:e},u),{},{components:t})):n.createElement(f,i({ref:e},u))}));function f(r,e){var t=arguments,a=e&&e.mdxType;if("string"==typeof r||a){var o=t.length,i=new Array(o);i[0]=p;var s={};for(var l in e)hasOwnProperty.call(e,l)&&(s[l]=e[l]);s.originalType=r,s[c]="string"==typeof r?r:a,i[1]=s;for(var m=2;m<o;m++)i[m]=t[m];return n.createElement.apply(null,i)}return n.createElement.apply(null,t)}p.displayName="MDXCreateElement"},7515:(r,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>i,default:()=>d,frontMatter:()=>o,metadata:()=>s,toc:()=>m});var n=t(7462),a=(t(7294),t(3905));const o={sidebar_position:5},i="Third party integration",s={unversionedId:"forms/third-party-integration",id:"forms/third-party-integration",title:"Third party integration",description:"Chakra UI",source:"@site/docs/forms/third-party-integration.md",sourceDirName:"forms",slug:"/forms/third-party-integration",permalink:"/react-utils/docs/forms/third-party-integration",draft:!1,editUrl:"https://github.com/ESMO-ENTERPRISE/react-utils/tree/main/docs/forms/third-party-integration.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Standard form component",permalink:"/react-utils/docs/forms/standar-component"},next:{title:"Hooks",permalink:"/react-utils/docs/category/hooks"}},l={},m=[{value:"Chakra UI",id:"chakra-ui",level:2},{value:"Example",id:"example",level:2}],u={toc:m},c="wrapper";function d(r){let{components:e,...t}=r;return(0,a.kt)(c,(0,n.Z)({},u,t,{components:e,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"third-party-integration"},"Third party integration"),(0,a.kt)("h2",{id:"chakra-ui"},"Chakra UI"),(0,a.kt)("p",null,"All Chakra UI form components are standard form component, so we don't need to do any adaptations!"),(0,a.kt)("h2",{id:"example"},"Example"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-tsx"},"type FormValues = {\n  firstName?: string;\n  lastName?: string;\n  email?: string;\n  gender?: 'male' | 'female';\n};\n\nexport const App = () => {\n  const { field, submit, hasError, getError } = useForm<FormValues>({\n    onSubmit: (values: FormValues) => {\n      alert(JSON.stringify(values));\n    },\n    onValidate: (values: FormValues) => {\n      const formErrors: FormErrors<FormValues> = new Map();\n      if (!values.firstName) {\n        formErrors.set('firstName', 'First name is required');\n      }\n      if (!values.lastName) {\n        formErrors.set('lastName', 'Last name is required');\n      }\n      if (!values.email) {\n        formErrors.set('email', 'Email is required');\n      }\n      if (!values.gender) {\n        formErrors.set('gender', 'Gender is required');\n      }\n      return formErrors;\n    },\n    isValidateOnTouched: true,\n    isFocusOnValidateFailed: true,\n  });\n\n  return (\n    <Box p=\"4\">\n      <Text fontSize=\"xl\" fontWeight=\"bold\" textAlign=\"center\">\n        Charkra UI - React Happy Form\n      </Text>\n      <form onSubmit={submit}>\n        <VStack spacing={4} align=\"flex-start\">\n          <FormControl isInvalid={hasError('firstName')}>\n            <FormLabel htmlFor=\"firstName\">First Name</FormLabel>\n            <Input id=\"firstName\" {...register(field('firstName'))} />\n            <FormErrorMessage>{getError('firstName')}</FormErrorMessage>\n          </FormControl>\n          <FormControl isInvalid={hasError('lastName')}>\n            <FormLabel htmlFor=\"lastName\">Last Name</FormLabel>\n            <Input id=\"lastName\" {...register(field('lastName'))} />\n            <FormErrorMessage>{getError('lastName')}</FormErrorMessage>\n          </FormControl>\n          <FormControl isInvalid={hasError('email')}>\n            <FormLabel htmlFor=\"email\">Email</FormLabel>\n            <Input id=\"email\" {...register(field('email'))} />\n            <FormErrorMessage>{getError('email')}</FormErrorMessage>\n          </FormControl>\n          <FormControl isInvalid={hasError('gender')}>\n            <FormLabel htmlFor=\"gender\">Gender</FormLabel>\n            <RadioGroup {...field('gender')}>\n              <HStack spacing={4}>\n                <Radio value=\"male\">Male</Radio>\n                <Radio value=\"female\">Female</Radio>\n              </HStack>\n            </RadioGroup>\n            <FormErrorMessage>{getError('gender')}</FormErrorMessage>\n          </FormControl>\n          <Button type=\"submit\" colorScheme=\"green\" width=\"full\">\n            Submit\n          </Button>\n        </VStack>\n      </form>\n    </Box>\n  );\n};\n")))}d.isMDXComponent=!0}}]);